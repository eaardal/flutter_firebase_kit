import 'dart:async';

import 'package:chopshop/di.dart';
import 'package:chopshop/localization.dart';
import 'package:chopshop/routes.dart';
import 'package:flutter/material.dart';
import 'package:flutter_firebase_kit/infrastructure/bloc.dart';
import 'package:flutter_firebase_kit/theme/app_theme.dart';
import 'package:provider/provider.dart';

import 'home/home_screen.dart';

class App {
  static const String name = "ChopShop";

  String _title;
  Environment _environment;
  bool get isDevelopment => _environment == Environment.development;

  App({
    required String title,
    required Environment environment,
  })  : this._title = title,
        this._environment = environment;

  Future<void> run() async {
    runZonedGuarded(() async {
      FlutterError.onError = _onFlutterError;
      await _init();
      runApp(_createApp());
    }, _onDartError);
  }

  Future<void> _init() async {
    WidgetsFlutterBinding.ensureInitialized();
  }

  Widget _createApp() {
    var di = DI();
    return MultiProvider(
      providers: [
        Provider.value(value: BlocFactory(di.blocCreators)),
        Provider.value(value: di.logger),
      ],
      child: AppRoot(_title),
    );
  }

  void _onDartError(Object error, StackTrace stackTrace) {
    if (isDevelopment) {
      print(error);
      print(stackTrace);
    } else {
      // TODO: Production error reporting system
    }
  }

  void _onFlutterError(FlutterErrorDetails error) {
    if (isDevelopment) {
      FlutterError.dumpErrorToConsole(error);
    } else {
      Zone.current.handleUncaughtError(error.exception, error.stack!);
      // TODO: Production error reporting system
    }
  }
}

class AppRoot extends StatelessWidget {
  final String _title;

  AppRoot(this._title);

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: _title,
      theme: AppTheme.current,
      routes: Routes.registry(),
      home: HomeScreen(),
      localizationsDelegates: Localization.localizationsDelegates,
      supportedLocales: Localization.supportedLocales,
    );
  }
}
